Class "Object"
{
    Constructor Should Contain/Do{

        Form
        {
            triangle{
                each point
                relative pivot point
            }

            circle{
                position/pivot point
                radians
            }

            rectangle{
                position
                width, height
                relative pivot point
            }

            object "spawns" at pivot point
        }

        Color

        Mass

        Elastisity

        General hitbox that is based on the futherst points
    }

    //Called upon when the Objects general hitbox collides with another
    Collision function{
        Check what kind of object hit
    }

}






double part1 = 2 * Math.Sin(rotation - conected.rotation);
                double part2 = velocity * velocity * leangth * (mass + conected.mass);
                double part3 = gravity * (mass + conected.mass) * Math.Cos(rotation);
                double part4 = conected.velocity * conected.velocity * conected.leangth * conected.mass * Math.Cos(rotation - conected.rotation);
                double fullPart = part1 * (part2 + part3 + part4);

                double divider = conected.leangth * (2 * mass * conected.mass - conected.mass * Math.Cos(2 * rotation - 2 * conected.rotation));

                acelaration = (float)(fullPart/divider);